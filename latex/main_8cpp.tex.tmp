\hypertarget{main_8cpp}{}\section{main.\+cpp File Reference}
\label{main_8cpp}\index{main.\+cpp@{main.\+cpp}}
{\ttfamily \#include $<$iostream$>$}\\*
{\ttfamily \#include \char`\"{}includes/\+S\+\_\+\+List.\+h\char`\"{}}\\*
{\ttfamily \#include \char`\"{}includes/\+Scoope.\+h\char`\"{}}\\*
{\ttfamily \#include $<$regex$>$}\\*
{\ttfamily \#include $<$string$>$}\\*
Include dependency graph for main.\+cpp\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
regex const \hyperlink{main_8cpp_aeb4321425271082995732fbce8551bdc}{rgx\+\_\+struct\+\_\+v0} (\hyperlink{main_8cpp_ab94e9c1017c70ed36408a46eee059c60}{ptrn\+\_\+struct})
\item 
regex const \hyperlink{main_8cpp_af19be93991a40810b6f61de4e5f98276}{rgx\+\_\+print\+\_\+v0} (\hyperlink{main_8cpp_a6096518e1ea3a916d310fdc0212dd9bb}{ptrn\+\_\+print})
\item 
regex const \hyperlink{main_8cpp_af4b7e43bacaa93f80bfcc58922fb934d}{rgx\+\_\+\+DG} (\hyperlink{main_8cpp_aaffc3d3eb4c84f5f2fc4eedc05b20d5b}{ptrn\+\_\+declaracion\+General\+\_\+v1})
\item 
regex const \hyperlink{main_8cpp_acd7260bcc727d5a3e8a12b12103fffd6}{rgx\+\_\+\+A\+G\+\_\+v3} (\hyperlink{main_8cpp_a3dc9ac1f21f62f157046385dc7db5159}{ptrn\+\_\+asignacion\+General\+\_\+v3})
\item 
regex const \hyperlink{main_8cpp_a2ce77aa09f7fee19253766e8be230689}{rgx\+\_\+\+D\+A\+G\+\_\+v1} (\hyperlink{main_8cpp_ae5be3616e1376b02be29191d86e98d6f}{ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2})
\item 
regex const \hyperlink{main_8cpp_a446c17ed6e65fcd120eb5de21236f2fc}{rgx\+\_\+\+O\+A\+\_\+v1} (\hyperlink{main_8cpp_aae796afd04a0d54ace7b69e78ddfb073}{ptrn\+\_\+operacion\+Aritmetica\+\_\+v5})
\item 
regex const \hyperlink{main_8cpp_adfc6a6e700f4732cdd674cb4eb08d79f}{rgx\+\_\+\+O\+A\+\_\+v2} (\hyperlink{main_8cpp_a3ed7415fc06bca245f48410aa30b72a0}{ptrn\+\_\+operacion\+Aritmetica\+\_\+v7})
\item 
regex const \hyperlink{main_8cpp_a86f5fb421a3124c5c7ae6a2252992c51}{rgx\+\_\+\+O\+V\+\_\+v0} (\hyperlink{main_8cpp_a3ee840790759955862a8968dc054ccd2}{ptrn\+\_\+operador\+\_\+variable\+\_\+v0})
\item 
char \hyperlink{main_8cpp_ac15a91b606f2e1657914d6e9d73488e1}{get\+Type\+Data\+Declaration} (std\+::string instruccion)
\item 
void \hyperlink{main_8cpp_a373a068feda44aa8033c69dee2a4d6b4}{get\+Tokens} (smatch groups, \hyperlink{classS__List}{S\+\_\+\+List}$<$ string $>$ $\ast$tokens)
\item 
void \hyperlink{main_8cpp_a97db5effa21a1841cd079a266fde7f58}{eliminar\+Espacios} (\hyperlink{classS__List}{S\+\_\+\+List}$<$ string $>$ $\ast$tokens)
\item 
bool \hyperlink{main_8cpp_a89607e04f574597b1218d25aeeafce14}{get\+Tokens\+Operacion} (string str, \hyperlink{classS__List}{S\+\_\+\+List}$<$ string $>$ $\ast$tokens)
\item 
\hyperlink{classS__List}{S\+\_\+\+List}$<$ string $>$ $\ast$ \hyperlink{main_8cpp_ad846cd4f651e25a13f7db386551d8615}{parsear} (string str, char c)
\item 
int \hyperlink{main_8cpp_afa1d3ad90bfc959c3e804a5ff2ebd9ca}{read\+Instruction} (string instruccion, \hyperlink{classS__List}{S\+\_\+\+List}$<$ string $>$ $\ast$tokens)
\item 
void \hyperlink{main_8cpp_acccbb25b5a6035de7940d57d054a7d08}{print\+Structs} ()
\item 
void \hyperlink{main_8cpp_ae9fc89fdf4b2c511c17a8cf44f22f6ac}{print\+Scoopes} ()
\item 
\hyperlink{classS__List}{S\+\_\+\+List}$<$ string $>$ $\ast$ \hyperlink{main_8cpp_a219afa6a0c2cea2e187e100ecefed3fa}{get\+Scoope\+Variables} (\hyperlink{classScoope}{Scoope} scoope)
\item 
bool \hyperlink{main_8cpp_a982bd0a5a2508ca570374f3f2e5dfa0c}{read\+Lines} (string text)
\item 
void \hyperlink{main_8cpp_a4d048dd0583f5cbbc04a659418539144}{extraer\+String} (string s, string $\ast$array, regex r)
\item 
string \hyperlink{main_8cpp_a754a6cbd36980f34aa9821038332b1a4}{sin\+\_\+espacios\+\_\+innecesarios} (string str)
\item 
void \hyperlink{main_8cpp_a753a7209eed7000db7e4c9db2cb401ad}{procesar\+\_\+structs} (string $\ast$code)
\item 
bool \hyperlink{main_8cpp_a9bd04f494ab4899142ca39334c274a3d}{procesar\+\_\+\+Scoopes} (string code)
\item 
void \hyperlink{main_8cpp_a3b745b7089190a2ce830298fff632b6c}{read\+Code} (string code)
\item 
int \hyperlink{main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4}{main} ()
\end{DoxyCompactItemize}
\subsection*{Variables}
\begin{DoxyCompactItemize}
\item 
string const \hyperlink{main_8cpp_a51e9a8eee20edfb7a8d6a51eda34bfd3}{ptrn\+\_\+nombre\+\_\+v} = \char`\"{}(?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$\char`\"{}
\item 
string const \hyperlink{main_8cpp_ab24bcd1d26684d81c34087f796d5ea02}{ptrn\+\_\+las\+\_\+weas\+\_\+de\+\_\+antes\+\_\+de\+\_\+v} = \char`\"{}(?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$(?!\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}+)$\ast$\char`\"{}
\item 
string const \hyperlink{main_8cpp_a0368ab57460a3676b556cb78aa72f732}{ptrn\+\_\+weas\+\_\+v} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$(?!\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}+)$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$\char`\"{}
\item 
string const \hyperlink{main_8cpp_ab94e9c1017c70ed36408a46eee059c60}{ptrn\+\_\+struct} = \char`\"{}(?\+:(struct)\textbackslash{}\textbackslash{}s$\ast$(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}\{)\textbackslash{}\textbackslash{}s$\ast$((?!\mbox{[}\textbackslash{}\textbackslash{}\{\textbackslash{}\textbackslash{}\}\mbox{]})\textbackslash{}\textbackslash{}s$\ast$(?\+:\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\{\textbackslash{}\textbackslash{}\}\mbox{]}$\vert$\textbackslash{}\textbackslash{}s)+)\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}\})\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{},?\textbackslash{}\textbackslash{}s$\ast$)$\ast$\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};))\char`\"{}
\item 
string const \hyperlink{main_8cpp_a8592e9febee0d22c94a150ebe8dce26c}{ptrn\+\_\+hmmm} = \char`\"{}(\textbackslash{}\textbackslash{}\{)\textbackslash{}\textbackslash{}s$\ast$((?!\mbox{[}\textbackslash{}\textbackslash{}\{\textbackslash{}\textbackslash{}\}\mbox{]})\textbackslash{}\textbackslash{}s$\ast$(?\+:\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\{\textbackslash{}\textbackslash{}\}\mbox{]}$\vert$\textbackslash{}\textbackslash{}s)+)\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}\})\char`\"{}
\item 
string const \hyperlink{main_8cpp_a6096518e1ea3a916d310fdc0212dd9bb}{ptrn\+\_\+print} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(Hable)\textbackslash{}\textbackslash{}(\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}$\vert$(?\+:(?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{})\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{})\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}
\item 
string const \hyperlink{main_8cpp_a805370202f774ee23883df1931aafd35}{ptrn\+\_\+get\+Addr} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(get\+Addr)\textbackslash{}\textbackslash{}(\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{})\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{})\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}
\item 
regex const \hyperlink{main_8cpp_a489f6ece67030823175b64e22010b156}{rgx\+\_\+get\+Addr} = regex(\hyperlink{main_8cpp_a805370202f774ee23883df1931aafd35}{ptrn\+\_\+get\+Addr})
\item 
string const \hyperlink{main_8cpp_a2025d392929b734d63324d97d5116f64}{ptrn\+\_\+get\+Value} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(get\+Value)\textbackslash{}\textbackslash{}(\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{})\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{})\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}
\item 
regex const \hyperlink{main_8cpp_a0e9f1d60102fc68784d000e0b4f2bb73}{rgx\+\_\+get\+Value} = regex(\hyperlink{main_8cpp_a2025d392929b734d63324d97d5116f64}{ptrn\+\_\+get\+Value})
\item 
regex const \hyperlink{main_8cpp_a1f0664b6cc375ff3b737517d3863fe35}{rgx\+\_\+arreglar\+\_\+espaciado\+\_\+llaves} = regex(\char`\"{}\textbackslash{}\textbackslash{}s\{2,\}$\vert$\textbackslash{}\textbackslash{}\{$\vert$\textbackslash{}\textbackslash{}\}\char`\"{})
\item 
regex const \hyperlink{main_8cpp_a0dbe3e1f8fa5788316096015b57cedd0}{rgx\+\_\+arreglar\+\_\+espaciado} = regex(\char`\"{}\textbackslash{}\textbackslash{}s\{2,\}\char`\"{})
\item 
string const \hyperlink{main_8cpp_aaffc3d3eb4c84f5f2fc4eedc05b20d5b}{ptrn\+\_\+declaracion\+General\+\_\+v1} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s$\ast$(reference)\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{}$<$(int$\vert$long$\vert$char$\vert$float$\vert$double)\textbackslash{}\textbackslash{}$>$\textbackslash{}\textbackslash{}s+((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{};\char`\"{}
\item 
string const \hyperlink{main_8cpp_a3dc9ac1f21f62f157046385dc7db5159}{ptrn\+\_\+asignacion\+General\+\_\+v3} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$(=$\vert$\textbackslash{}\textbackslash{}+=$\vert$\textbackslash{}\textbackslash{}-\/=)\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}d+))$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}
\item 
string const \hyperlink{main_8cpp_ae5be3616e1376b02be29191d86e98d6f}{ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(?\+:(reference\textbackslash{}\textbackslash{}$<$(?\+:int$\vert$long$\vert$char$\vert$float$\vert$double)\textbackslash{}\textbackslash{}$>$)$\vert$(int$\vert$long$\vert$char$\vert$float$\vert$double))(?\+:\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}$\ast$+)\textbackslash{}\textbackslash{}s$\ast$$\vert$(\textbackslash{}\textbackslash{}$\ast$+)\textbackslash{}\textbackslash{}s$\ast$$\vert$\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}$\ast$+)$\vert$(\textbackslash{}\textbackslash{}s+))((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}-\/\textbackslash{}\textbackslash{}/\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}\&\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$(=)\textbackslash{}\textbackslash{}s$\ast$(?\+:(\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}.\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$((?!.$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}
\item 
string const \hyperlink{main_8cpp_aae796afd04a0d54ace7b69e78ddfb073}{ptrn\+\_\+operacion\+Aritmetica\+\_\+v5} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:(?\+:(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}d+))$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))\textbackslash{}\textbackslash{}s$\ast$($\vert$\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}$\ast$$\vert$\textbackslash{}\textbackslash{}/)\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}d+))$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))$\vert$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))\textbackslash{}\textbackslash{}s$\ast$\char`\"{}
\item 
string const \hyperlink{main_8cpp_a3ed7415fc06bca245f48410aa30b72a0}{ptrn\+\_\+operacion\+Aritmetica\+\_\+v7} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$($\vert$\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}$\ast$$\vert$\textbackslash{}\textbackslash{}/)\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}d+))$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))\textbackslash{}\textbackslash{}s$\ast$\char`\"{}
\item 
string const \hyperlink{main_8cpp_a3ee840790759955862a8968dc054ccd2}{ptrn\+\_\+operador\+\_\+variable\+\_\+v0} = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(?\+:(\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}/\mbox{]}$\vert$(?\+:\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]}\textbackslash{}\textbackslash{}s+(?!\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))$\ast$(?\+:\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]}(?!\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))$\vert$\textbackslash{}\textbackslash{}-\/\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}/\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}/\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}\%$\vert$(?\+:\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\textbackslash{}\textbackslash{}s$\ast$)$\ast$(?\+:\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/))(\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})?\textbackslash{}\textbackslash{}s$\ast$(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$(?!\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}+)$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$(((?!.$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))\textbackslash{}\textbackslash{}s$\ast$(\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\})$\vert$(((?!.$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$\textbackslash{}\textbackslash{}d+)))\char`\"{}
\item 
\hyperlink{classS__List}{S\+\_\+\+List}$<$ \hyperlink{classScoope}{Scoope} $>$ $\ast$ \hyperlink{main_8cpp_ac48af5dc2dded4ca1315924dd9de141a}{V\+G\+\_\+scoopes} = new \hyperlink{classS__List}{S\+\_\+\+List}$<$\hyperlink{classScoope}{Scoope}$>$
\item 
\hyperlink{classS__List}{S\+\_\+\+List}$<$ \hyperlink{classS__List}{S\+\_\+\+List}$<$ string $>$ $>$ $\ast$ \hyperlink{main_8cpp_acb5e2a3948fec132d051d0b3a63950ca}{V\+G\+\_\+structs} = new \hyperlink{classS__List}{S\+\_\+\+List}$<$\hyperlink{classS__List}{S\+\_\+\+List}$<$string$>$$>$
\end{DoxyCompactItemize}


\subsection{Function Documentation}
\index{main.\+cpp@{main.\+cpp}!eliminar\+Espacios@{eliminar\+Espacios}}
\index{eliminar\+Espacios@{eliminar\+Espacios}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{eliminar\+Espacios(\+S\+\_\+\+List$<$ string $>$ $\ast$tokens)}{eliminarEspacios(S_List< string > *tokens)}}]{\setlength{\rightskip}{0pt plus 5cm}void eliminar\+Espacios (
\begin{DoxyParamCaption}
\item[{{\bf S\+\_\+\+List}$<$ string $>$ $\ast$}]{tokens}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a97db5effa21a1841cd079a266fde7f58}{}\label{main_8cpp_a97db5effa21a1841cd079a266fde7f58}
\index{main.\+cpp@{main.\+cpp}!extraer\+String@{extraer\+String}}
\index{extraer\+String@{extraer\+String}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{extraer\+String(string s, string $\ast$array, regex r)}{extraerString(string s, string *array, regex r)}}]{\setlength{\rightskip}{0pt plus 5cm}void extraer\+String (
\begin{DoxyParamCaption}
\item[{string}]{s, }
\item[{string $\ast$}]{array, }
\item[{regex}]{r}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a4d048dd0583f5cbbc04a659418539144}{}\label{main_8cpp_a4d048dd0583f5cbbc04a659418539144}
\index{main.\+cpp@{main.\+cpp}!get\+Scoope\+Variables@{get\+Scoope\+Variables}}
\index{get\+Scoope\+Variables@{get\+Scoope\+Variables}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{get\+Scoope\+Variables(\+Scoope scoope)}{getScoopeVariables(Scoope scoope)}}]{\setlength{\rightskip}{0pt plus 5cm}{\bf S\+\_\+\+List}$<$string$>$$\ast$ get\+Scoope\+Variables (
\begin{DoxyParamCaption}
\item[{{\bf Scoope}}]{scoope}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a219afa6a0c2cea2e187e100ecefed3fa}{}\label{main_8cpp_a219afa6a0c2cea2e187e100ecefed3fa}
\index{main.\+cpp@{main.\+cpp}!get\+Tokens@{get\+Tokens}}
\index{get\+Tokens@{get\+Tokens}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{get\+Tokens(smatch groups, S\+\_\+\+List$<$ string $>$ $\ast$tokens)}{getTokens(smatch groups, S_List< string > *tokens)}}]{\setlength{\rightskip}{0pt plus 5cm}void get\+Tokens (
\begin{DoxyParamCaption}
\item[{smatch}]{groups, }
\item[{{\bf S\+\_\+\+List}$<$ string $>$ $\ast$}]{tokens}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a373a068feda44aa8033c69dee2a4d6b4}{}\label{main_8cpp_a373a068feda44aa8033c69dee2a4d6b4}
\index{main.\+cpp@{main.\+cpp}!get\+Tokens\+Operacion@{get\+Tokens\+Operacion}}
\index{get\+Tokens\+Operacion@{get\+Tokens\+Operacion}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{get\+Tokens\+Operacion(string str, S\+\_\+\+List$<$ string $>$ $\ast$tokens)}{getTokensOperacion(string str, S_List< string > *tokens)}}]{\setlength{\rightskip}{0pt plus 5cm}bool get\+Tokens\+Operacion (
\begin{DoxyParamCaption}
\item[{string}]{str, }
\item[{{\bf S\+\_\+\+List}$<$ string $>$ $\ast$}]{tokens}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a89607e04f574597b1218d25aeeafce14}{}\label{main_8cpp_a89607e04f574597b1218d25aeeafce14}
\index{main.\+cpp@{main.\+cpp}!get\+Type\+Data\+Declaration@{get\+Type\+Data\+Declaration}}
\index{get\+Type\+Data\+Declaration@{get\+Type\+Data\+Declaration}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{get\+Type\+Data\+Declaration(std\+::string instruccion)}{getTypeDataDeclaration(std::string instruccion)}}]{\setlength{\rightskip}{0pt plus 5cm}char get\+Type\+Data\+Declaration (
\begin{DoxyParamCaption}
\item[{std\+::string}]{instruccion}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_ac15a91b606f2e1657914d6e9d73488e1}{}\label{main_8cpp_ac15a91b606f2e1657914d6e9d73488e1}
\index{main.\+cpp@{main.\+cpp}!main@{main}}
\index{main@{main}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{main()}{main()}}]{\setlength{\rightskip}{0pt plus 5cm}int main (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4}{}\label{main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4}
\index{main.\+cpp@{main.\+cpp}!parsear@{parsear}}
\index{parsear@{parsear}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{parsear(string str, char c)}{parsear(string str, char c)}}]{\setlength{\rightskip}{0pt plus 5cm}{\bf S\+\_\+\+List}$<$string$>$$\ast$ parsear (
\begin{DoxyParamCaption}
\item[{string}]{str, }
\item[{char}]{c}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_ad846cd4f651e25a13f7db386551d8615}{}\label{main_8cpp_ad846cd4f651e25a13f7db386551d8615}
\index{main.\+cpp@{main.\+cpp}!print\+Scoopes@{print\+Scoopes}}
\index{print\+Scoopes@{print\+Scoopes}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{print\+Scoopes()}{printScoopes()}}]{\setlength{\rightskip}{0pt plus 5cm}void print\+Scoopes (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_ae9fc89fdf4b2c511c17a8cf44f22f6ac}{}\label{main_8cpp_ae9fc89fdf4b2c511c17a8cf44f22f6ac}
\index{main.\+cpp@{main.\+cpp}!print\+Structs@{print\+Structs}}
\index{print\+Structs@{print\+Structs}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{print\+Structs()}{printStructs()}}]{\setlength{\rightskip}{0pt plus 5cm}void print\+Structs (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_acccbb25b5a6035de7940d57d054a7d08}{}\label{main_8cpp_acccbb25b5a6035de7940d57d054a7d08}
\index{main.\+cpp@{main.\+cpp}!procesar\+\_\+\+Scoopes@{procesar\+\_\+\+Scoopes}}
\index{procesar\+\_\+\+Scoopes@{procesar\+\_\+\+Scoopes}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{procesar\+\_\+\+Scoopes(string code)}{procesar_Scoopes(string code)}}]{\setlength{\rightskip}{0pt plus 5cm}bool procesar\+\_\+\+Scoopes (
\begin{DoxyParamCaption}
\item[{string}]{code}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a9bd04f494ab4899142ca39334c274a3d}{}\label{main_8cpp_a9bd04f494ab4899142ca39334c274a3d}
\index{main.\+cpp@{main.\+cpp}!procesar\+\_\+structs@{procesar\+\_\+structs}}
\index{procesar\+\_\+structs@{procesar\+\_\+structs}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{procesar\+\_\+structs(string $\ast$code)}{procesar_structs(string *code)}}]{\setlength{\rightskip}{0pt plus 5cm}void procesar\+\_\+structs (
\begin{DoxyParamCaption}
\item[{string $\ast$}]{code}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a753a7209eed7000db7e4c9db2cb401ad}{}\label{main_8cpp_a753a7209eed7000db7e4c9db2cb401ad}
\index{main.\+cpp@{main.\+cpp}!read\+Code@{read\+Code}}
\index{read\+Code@{read\+Code}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{read\+Code(string code)}{readCode(string code)}}]{\setlength{\rightskip}{0pt plus 5cm}void read\+Code (
\begin{DoxyParamCaption}
\item[{string}]{code}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a3b745b7089190a2ce830298fff632b6c}{}\label{main_8cpp_a3b745b7089190a2ce830298fff632b6c}
\index{main.\+cpp@{main.\+cpp}!read\+Instruction@{read\+Instruction}}
\index{read\+Instruction@{read\+Instruction}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{read\+Instruction(string instruccion, S\+\_\+\+List$<$ string $>$ $\ast$tokens)}{readInstruction(string instruccion, S_List< string > *tokens)}}]{\setlength{\rightskip}{0pt plus 5cm}int read\+Instruction (
\begin{DoxyParamCaption}
\item[{string}]{instruccion, }
\item[{{\bf S\+\_\+\+List}$<$ string $>$ $\ast$}]{tokens}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_afa1d3ad90bfc959c3e804a5ff2ebd9ca}{}\label{main_8cpp_afa1d3ad90bfc959c3e804a5ff2ebd9ca}
\index{main.\+cpp@{main.\+cpp}!read\+Lines@{read\+Lines}}
\index{read\+Lines@{read\+Lines}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{read\+Lines(string text)}{readLines(string text)}}]{\setlength{\rightskip}{0pt plus 5cm}bool read\+Lines (
\begin{DoxyParamCaption}
\item[{string}]{text}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a982bd0a5a2508ca570374f3f2e5dfa0c}{}\label{main_8cpp_a982bd0a5a2508ca570374f3f2e5dfa0c}
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! \index{main.\+cpp@{main.\+cpp}!rgx\+\_\+\+A\+G\+\_\+v3@{rgx\+\_\+\+A\+G\+\_\+v3}}
\index{rgx\+\_\+\+A\+G\+\_\+v3@{rgx\+\_\+\+A\+G\+\_\+v3}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+\+A\+G\+\_\+v3(ptrn\+\_\+asignacion\+General\+\_\+v3)}{rgx_AG_v3(ptrn_asignacionGeneral_v3)}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+\+A\+G\+\_\+v3 (
\begin{DoxyParamCaption}
\item[{{\bf ptrn\+\_\+asignacion\+General\+\_\+v3}}]{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_acd7260bcc727d5a3e8a12b12103fffd6}{}\label{main_8cpp_acd7260bcc727d5a3e8a12b12103fffd6}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+\+D\+A\+G\+\_\+v1@{rgx\+\_\+\+D\+A\+G\+\_\+v1}}
\index{rgx\+\_\+\+D\+A\+G\+\_\+v1@{rgx\+\_\+\+D\+A\+G\+\_\+v1}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+\+D\+A\+G\+\_\+v1(ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2)}{rgx_DAG_v1(ptrn_declaracion_AsignacionGeneral_v2)}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+\+D\+A\+G\+\_\+v1 (
\begin{DoxyParamCaption}
\item[{{\bf ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2}}]{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a2ce77aa09f7fee19253766e8be230689}{}\label{main_8cpp_a2ce77aa09f7fee19253766e8be230689}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+\+DG@{rgx\+\_\+\+DG}}
\index{rgx\+\_\+\+DG@{rgx\+\_\+\+DG}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+\+D\+G(ptrn\+\_\+declaracion\+General\+\_\+v1)}{rgx_DG(ptrn_declaracionGeneral_v1)}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+\+DG (
\begin{DoxyParamCaption}
\item[{{\bf ptrn\+\_\+declaracion\+General\+\_\+v1}}]{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_af4b7e43bacaa93f80bfcc58922fb934d}{}\label{main_8cpp_af4b7e43bacaa93f80bfcc58922fb934d}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+\+O\+A\+\_\+v1@{rgx\+\_\+\+O\+A\+\_\+v1}}
\index{rgx\+\_\+\+O\+A\+\_\+v1@{rgx\+\_\+\+O\+A\+\_\+v1}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+\+O\+A\+\_\+v1(ptrn\+\_\+operacion\+Aritmetica\+\_\+v5)}{rgx_OA_v1(ptrn_operacionAritmetica_v5)}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+\+O\+A\+\_\+v1 (
\begin{DoxyParamCaption}
\item[{{\bf ptrn\+\_\+operacion\+Aritmetica\+\_\+v5}}]{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a446c17ed6e65fcd120eb5de21236f2fc}{}\label{main_8cpp_a446c17ed6e65fcd120eb5de21236f2fc}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+\+O\+A\+\_\+v2@{rgx\+\_\+\+O\+A\+\_\+v2}}
\index{rgx\+\_\+\+O\+A\+\_\+v2@{rgx\+\_\+\+O\+A\+\_\+v2}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+\+O\+A\+\_\+v2(ptrn\+\_\+operacion\+Aritmetica\+\_\+v7)}{rgx_OA_v2(ptrn_operacionAritmetica_v7)}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+\+O\+A\+\_\+v2 (
\begin{DoxyParamCaption}
\item[{{\bf ptrn\+\_\+operacion\+Aritmetica\+\_\+v7}}]{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_adfc6a6e700f4732cdd674cb4eb08d79f}{}\label{main_8cpp_adfc6a6e700f4732cdd674cb4eb08d79f}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+\+O\+V\+\_\+v0@{rgx\+\_\+\+O\+V\+\_\+v0}}
\index{rgx\+\_\+\+O\+V\+\_\+v0@{rgx\+\_\+\+O\+V\+\_\+v0}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+\+O\+V\+\_\+v0(ptrn\+\_\+operador\+\_\+variable\+\_\+v0)}{rgx_OV_v0(ptrn_operador_variable_v0)}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+\+O\+V\+\_\+v0 (
\begin{DoxyParamCaption}
\item[{{\bf ptrn\+\_\+operador\+\_\+variable\+\_\+v0}}]{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a86f5fb421a3124c5c7ae6a2252992c51}{}\label{main_8cpp_a86f5fb421a3124c5c7ae6a2252992c51}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+print\+\_\+v0@{rgx\+\_\+print\+\_\+v0}}
\index{rgx\+\_\+print\+\_\+v0@{rgx\+\_\+print\+\_\+v0}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+print\+\_\+v0(ptrn\+\_\+print)}{rgx_print_v0(ptrn_print)}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+print\+\_\+v0 (
\begin{DoxyParamCaption}
\item[{{\bf ptrn\+\_\+print}}]{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_af19be93991a40810b6f61de4e5f98276}{}\label{main_8cpp_af19be93991a40810b6f61de4e5f98276}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+struct\+\_\+v0@{rgx\+\_\+struct\+\_\+v0}}
\index{rgx\+\_\+struct\+\_\+v0@{rgx\+\_\+struct\+\_\+v0}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+struct\+\_\+v0(ptrn\+\_\+struct)}{rgx_struct_v0(ptrn_struct)}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+struct\+\_\+v0 (
\begin{DoxyParamCaption}
\item[{{\bf ptrn\+\_\+struct}}]{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_aeb4321425271082995732fbce8551bdc}{}\label{main_8cpp_aeb4321425271082995732fbce8551bdc}
\index{main.\+cpp@{main.\+cpp}!sin\+\_\+espacios\+\_\+innecesarios@{sin\+\_\+espacios\+\_\+innecesarios}}
\index{sin\+\_\+espacios\+\_\+innecesarios@{sin\+\_\+espacios\+\_\+innecesarios}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{sin\+\_\+espacios\+\_\+innecesarios(string str)}{sin_espacios_innecesarios(string str)}}]{\setlength{\rightskip}{0pt plus 5cm}string sin\+\_\+espacios\+\_\+innecesarios (
\begin{DoxyParamCaption}
\item[{string}]{str}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a754a6cbd36980f34aa9821038332b1a4}{}\label{main_8cpp_a754a6cbd36980f34aa9821038332b1a4}


\subsection{Variable Documentation}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+asignacion\+General\+\_\+v3@{ptrn\+\_\+asignacion\+General\+\_\+v3}}
\index{ptrn\+\_\+asignacion\+General\+\_\+v3@{ptrn\+\_\+asignacion\+General\+\_\+v3}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+asignacion\+General\+\_\+v3}{ptrn_asignacionGeneral_v3}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+asignacion\+General\+\_\+v3 = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$(=$\vert$\textbackslash{}\textbackslash{}+=$\vert$\textbackslash{}\textbackslash{}-\/=)\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}d+))$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}}\hypertarget{main_8cpp_a3dc9ac1f21f62f157046385dc7db5159}{}\label{main_8cpp_a3dc9ac1f21f62f157046385dc7db5159}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2@{ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2}}
\index{ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2@{ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2}{ptrn_declaracion_AsignacionGeneral_v2}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+declaracion\+\_\+\+Asignacion\+General\+\_\+v2 = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(?\+:(reference\textbackslash{}\textbackslash{}$<$(?\+:int$\vert$long$\vert$char$\vert$float$\vert$double)\textbackslash{}\textbackslash{}$>$)$\vert$(int$\vert$long$\vert$char$\vert$float$\vert$double))(?\+:\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}$\ast$+)\textbackslash{}\textbackslash{}s$\ast$$\vert$(\textbackslash{}\textbackslash{}$\ast$+)\textbackslash{}\textbackslash{}s$\ast$$\vert$\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}$\ast$+)$\vert$(\textbackslash{}\textbackslash{}s+))((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}-\/\textbackslash{}\textbackslash{}/\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}\&\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$(=)\textbackslash{}\textbackslash{}s$\ast$(?\+:(\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}.\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$((?!.$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}}\hypertarget{main_8cpp_ae5be3616e1376b02be29191d86e98d6f}{}\label{main_8cpp_ae5be3616e1376b02be29191d86e98d6f}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+declaracion\+General\+\_\+v1@{ptrn\+\_\+declaracion\+General\+\_\+v1}}
\index{ptrn\+\_\+declaracion\+General\+\_\+v1@{ptrn\+\_\+declaracion\+General\+\_\+v1}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+declaracion\+General\+\_\+v1}{ptrn_declaracionGeneral_v1}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+declaracion\+General\+\_\+v1 = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s$\ast$(reference)\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{}$<$(int$\vert$long$\vert$char$\vert$float$\vert$double)\textbackslash{}\textbackslash{}$>$\textbackslash{}\textbackslash{}s+((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{};\char`\"{}}\hypertarget{main_8cpp_aaffc3d3eb4c84f5f2fc4eedc05b20d5b}{}\label{main_8cpp_aaffc3d3eb4c84f5f2fc4eedc05b20d5b}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+get\+Addr@{ptrn\+\_\+get\+Addr}}
\index{ptrn\+\_\+get\+Addr@{ptrn\+\_\+get\+Addr}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+get\+Addr}{ptrn_getAddr}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+get\+Addr = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(get\+Addr)\textbackslash{}\textbackslash{}(\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{})\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{})\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}}\hypertarget{main_8cpp_a805370202f774ee23883df1931aafd35}{}\label{main_8cpp_a805370202f774ee23883df1931aafd35}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+get\+Value@{ptrn\+\_\+get\+Value}}
\index{ptrn\+\_\+get\+Value@{ptrn\+\_\+get\+Value}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+get\+Value}{ptrn_getValue}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+get\+Value = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(get\+Value)\textbackslash{}\textbackslash{}(\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{})\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{})\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}}\hypertarget{main_8cpp_a2025d392929b734d63324d97d5116f64}{}\label{main_8cpp_a2025d392929b734d63324d97d5116f64}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+hmmm@{ptrn\+\_\+hmmm}}
\index{ptrn\+\_\+hmmm@{ptrn\+\_\+hmmm}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+hmmm}{ptrn_hmmm}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+hmmm = \char`\"{}(\textbackslash{}\textbackslash{}\{)\textbackslash{}\textbackslash{}s$\ast$((?!\mbox{[}\textbackslash{}\textbackslash{}\{\textbackslash{}\textbackslash{}\}\mbox{]})\textbackslash{}\textbackslash{}s$\ast$(?\+:\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\{\textbackslash{}\textbackslash{}\}\mbox{]}$\vert$\textbackslash{}\textbackslash{}s)+)\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}\})\char`\"{}}\hypertarget{main_8cpp_a8592e9febee0d22c94a150ebe8dce26c}{}\label{main_8cpp_a8592e9febee0d22c94a150ebe8dce26c}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+las\+\_\+weas\+\_\+de\+\_\+antes\+\_\+de\+\_\+v@{ptrn\+\_\+las\+\_\+weas\+\_\+de\+\_\+antes\+\_\+de\+\_\+v}}
\index{ptrn\+\_\+las\+\_\+weas\+\_\+de\+\_\+antes\+\_\+de\+\_\+v@{ptrn\+\_\+las\+\_\+weas\+\_\+de\+\_\+antes\+\_\+de\+\_\+v}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+las\+\_\+weas\+\_\+de\+\_\+antes\+\_\+de\+\_\+v}{ptrn_las_weas_de_antes_de_v}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+las\+\_\+weas\+\_\+de\+\_\+antes\+\_\+de\+\_\+v = \char`\"{}(?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$(?!\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}+)$\ast$\char`\"{}}\hypertarget{main_8cpp_ab24bcd1d26684d81c34087f796d5ea02}{}\label{main_8cpp_ab24bcd1d26684d81c34087f796d5ea02}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+nombre\+\_\+v@{ptrn\+\_\+nombre\+\_\+v}}
\index{ptrn\+\_\+nombre\+\_\+v@{ptrn\+\_\+nombre\+\_\+v}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+nombre\+\_\+v}{ptrn_nombre_v}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+nombre\+\_\+v = \char`\"{}(?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$\char`\"{}}\hypertarget{main_8cpp_a51e9a8eee20edfb7a8d6a51eda34bfd3}{}\label{main_8cpp_a51e9a8eee20edfb7a8d6a51eda34bfd3}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+operacion\+Aritmetica\+\_\+v5@{ptrn\+\_\+operacion\+Aritmetica\+\_\+v5}}
\index{ptrn\+\_\+operacion\+Aritmetica\+\_\+v5@{ptrn\+\_\+operacion\+Aritmetica\+\_\+v5}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+operacion\+Aritmetica\+\_\+v5}{ptrn_operacionAritmetica_v5}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+operacion\+Aritmetica\+\_\+v5 = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:(?\+:(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}d+))$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))\textbackslash{}\textbackslash{}s$\ast$($\vert$\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}$\ast$$\vert$\textbackslash{}\textbackslash{}/)\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}d+))$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))$\vert$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))\textbackslash{}\textbackslash{}s$\ast$\char`\"{}}\hypertarget{main_8cpp_aae796afd04a0d54ace7b69e78ddfb073}{}\label{main_8cpp_aae796afd04a0d54ace7b69e78ddfb073}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+operacion\+Aritmetica\+\_\+v7@{ptrn\+\_\+operacion\+Aritmetica\+\_\+v7}}
\index{ptrn\+\_\+operacion\+Aritmetica\+\_\+v7@{ptrn\+\_\+operacion\+Aritmetica\+\_\+v7}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+operacion\+Aritmetica\+\_\+v7}{ptrn_operacionAritmetica_v7}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+operacion\+Aritmetica\+\_\+v7 = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$($\vert$\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}$\ast$$\vert$\textbackslash{}\textbackslash{}/)\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}d+))$\vert$(\textbackslash{}\textbackslash{}\textquotesingle{}.\textbackslash{}\textbackslash{}\textquotesingle{})$\vert$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{})$\vert$(\textbackslash{}\textbackslash{}d+\textbackslash{}\textbackslash{}.\textbackslash{}\textbackslash{}d+)$\vert$(\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}-\/)?\textbackslash{}\textbackslash{}s$\ast$(?\+:(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$)+)(?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$((?!(int$\vert$long$\vert$char$\vert$float$\vert$doble$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))))\textbackslash{}\textbackslash{}s$\ast$\char`\"{}}\hypertarget{main_8cpp_a3ed7415fc06bca245f48410aa30b72a0}{}\label{main_8cpp_a3ed7415fc06bca245f48410aa30b72a0}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+operador\+\_\+variable\+\_\+v0@{ptrn\+\_\+operador\+\_\+variable\+\_\+v0}}
\index{ptrn\+\_\+operador\+\_\+variable\+\_\+v0@{ptrn\+\_\+operador\+\_\+variable\+\_\+v0}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+operador\+\_\+variable\+\_\+v0}{ptrn_operador_variable_v0}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+operador\+\_\+variable\+\_\+v0 = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(?\+:(\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}/\mbox{]}$\vert$(?\+:\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]}\textbackslash{}\textbackslash{}s+(?!\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))$\ast$(?\+:\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]}(?!\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}))$\vert$\textbackslash{}\textbackslash{}-\/\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}/\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}/\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}+$\vert$\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}-\/$\vert$\textbackslash{}\textbackslash{}\%$\vert$(?\+:\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\textbackslash{}\textbackslash{}s$\ast$)$\ast$(?\+:\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/))(\mbox{[}\textbackslash{}\textbackslash{}+\textbackslash{}\textbackslash{}-\/\mbox{]})?\textbackslash{}\textbackslash{}s$\ast$(?\+:((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$(?!\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}+)$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$(((?!.$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))\textbackslash{}\textbackslash{}s$\ast$(\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\})$\vert$(((?!.$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)$\vert$\textbackslash{}\textbackslash{}d+)))\char`\"{}}\hypertarget{main_8cpp_a3ee840790759955862a8968dc054ccd2}{}\label{main_8cpp_a3ee840790759955862a8968dc054ccd2}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+print@{ptrn\+\_\+print}}
\index{ptrn\+\_\+print@{ptrn\+\_\+print}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+print}{ptrn_print}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+print = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$(Hable)\textbackslash{}\textbackslash{}(\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}\mbox{]}$\ast$\textbackslash{}\textbackslash{}\textbackslash{}\char`\"{}$\vert$(?\+:(?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};\textbackslash{}\textbackslash{}s\textbackslash{}\textbackslash{})\mbox{]})\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$))\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{})\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};\char`\"{}}\hypertarget{main_8cpp_a6096518e1ea3a916d310fdc0212dd9bb}{}\label{main_8cpp_a6096518e1ea3a916d310fdc0212dd9bb}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+struct@{ptrn\+\_\+struct}}
\index{ptrn\+\_\+struct@{ptrn\+\_\+struct}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+struct}{ptrn_struct}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+struct = \char`\"{}(?\+:(struct)\textbackslash{}\textbackslash{}s$\ast$(\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}\{)\textbackslash{}\textbackslash{}s$\ast$((?!\mbox{[}\textbackslash{}\textbackslash{}\{\textbackslash{}\textbackslash{}\}\mbox{]})\textbackslash{}\textbackslash{}s$\ast$(?\+:\mbox{[}$^\wedge$\textbackslash{}\textbackslash{}\{\textbackslash{}\textbackslash{}\}\mbox{]}$\vert$\textbackslash{}\textbackslash{}s)+)\textbackslash{}\textbackslash{}s$\ast$(\textbackslash{}\textbackslash{}\})\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}A-\/z\mbox{]}\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{},?\textbackslash{}\textbackslash{}s$\ast$)$\ast$\textbackslash{}\textbackslash{}s$\ast$\textbackslash{}\textbackslash{};))\char`\"{}}\hypertarget{main_8cpp_ab94e9c1017c70ed36408a46eee059c60}{}\label{main_8cpp_ab94e9c1017c70ed36408a46eee059c60}
\index{main.\+cpp@{main.\+cpp}!ptrn\+\_\+weas\+\_\+v@{ptrn\+\_\+weas\+\_\+v}}
\index{ptrn\+\_\+weas\+\_\+v@{ptrn\+\_\+weas\+\_\+v}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{ptrn\+\_\+weas\+\_\+v}{ptrn_weas_v}}]{\setlength{\rightskip}{0pt plus 5cm}string const ptrn\+\_\+weas\+\_\+v = \char`\"{}\textbackslash{}\textbackslash{}s$\ast$((?\+:\mbox{[}\textbackslash{}\textbackslash{}+\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$\mbox{[}\textbackslash{}\textbackslash{}-\/\mbox{]}\{2\}\textbackslash{}\textbackslash{}s$\ast$$\vert$(?!\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}$\ast$?\mbox{[}\textbackslash{}\textbackslash{}\&\mbox{]}\{2\})\mbox{[}\textbackslash{}\textbackslash{}$\ast$\textbackslash{}\textbackslash{}\&\textbackslash{}\textbackslash{}s\mbox{]}+)$\ast$)\textbackslash{}\textbackslash{}s$\ast$((?!(int$\vert$long$\vert$char$\vert$float$\vert$double$\vert$struct)\mbox{[}\textbackslash{}\textbackslash{};$\vert$\textbackslash{}\textbackslash{}s\mbox{]})\mbox{[}A-\/z\mbox{]}+\mbox{[}A-\/z\textbackslash{}\textbackslash{}d\textbackslash{}\textbackslash{}\+\_\+\mbox{]}$\ast$)\textbackslash{}\textbackslash{}s$\ast$\char`\"{}}\hypertarget{main_8cpp_a0368ab57460a3676b556cb78aa72f732}{}\label{main_8cpp_a0368ab57460a3676b556cb78aa72f732}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+arreglar\+\_\+espaciado@{rgx\+\_\+arreglar\+\_\+espaciado}}
\index{rgx\+\_\+arreglar\+\_\+espaciado@{rgx\+\_\+arreglar\+\_\+espaciado}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+arreglar\+\_\+espaciado}{rgx_arreglar_espaciado}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+arreglar\+\_\+espaciado = regex(\char`\"{}\textbackslash{}\textbackslash{}s\{2,\}\char`\"{})}\hypertarget{main_8cpp_a0dbe3e1f8fa5788316096015b57cedd0}{}\label{main_8cpp_a0dbe3e1f8fa5788316096015b57cedd0}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+arreglar\+\_\+espaciado\+\_\+llaves@{rgx\+\_\+arreglar\+\_\+espaciado\+\_\+llaves}}
\index{rgx\+\_\+arreglar\+\_\+espaciado\+\_\+llaves@{rgx\+\_\+arreglar\+\_\+espaciado\+\_\+llaves}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+arreglar\+\_\+espaciado\+\_\+llaves}{rgx_arreglar_espaciado_llaves}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+arreglar\+\_\+espaciado\+\_\+llaves = regex(\char`\"{}\textbackslash{}\textbackslash{}s\{2,\}$\vert$\textbackslash{}\textbackslash{}\{$\vert$\textbackslash{}\textbackslash{}\}\char`\"{})}\hypertarget{main_8cpp_a1f0664b6cc375ff3b737517d3863fe35}{}\label{main_8cpp_a1f0664b6cc375ff3b737517d3863fe35}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+get\+Addr@{rgx\+\_\+get\+Addr}}
\index{rgx\+\_\+get\+Addr@{rgx\+\_\+get\+Addr}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+get\+Addr}{rgx_getAddr}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+get\+Addr = regex({\bf ptrn\+\_\+get\+Addr})}\hypertarget{main_8cpp_a489f6ece67030823175b64e22010b156}{}\label{main_8cpp_a489f6ece67030823175b64e22010b156}
\index{main.\+cpp@{main.\+cpp}!rgx\+\_\+get\+Value@{rgx\+\_\+get\+Value}}
\index{rgx\+\_\+get\+Value@{rgx\+\_\+get\+Value}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{rgx\+\_\+get\+Value}{rgx_getValue}}]{\setlength{\rightskip}{0pt plus 5cm}regex const rgx\+\_\+get\+Value = regex({\bf ptrn\+\_\+get\+Value})}\hypertarget{main_8cpp_a0e9f1d60102fc68784d000e0b4f2bb73}{}\label{main_8cpp_a0e9f1d60102fc68784d000e0b4f2bb73}
\index{main.\+cpp@{main.\+cpp}!V\+G\+\_\+scoopes@{V\+G\+\_\+scoopes}}
\index{V\+G\+\_\+scoopes@{V\+G\+\_\+scoopes}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{V\+G\+\_\+scoopes}{VG_scoopes}}]{\setlength{\rightskip}{0pt plus 5cm}{\bf S\+\_\+\+List}$<${\bf Scoope}$>$$\ast$ V\+G\+\_\+scoopes = new {\bf S\+\_\+\+List}$<${\bf Scoope}$>$}\hypertarget{main_8cpp_ac48af5dc2dded4ca1315924dd9de141a}{}\label{main_8cpp_ac48af5dc2dded4ca1315924dd9de141a}
\index{main.\+cpp@{main.\+cpp}!V\+G\+\_\+structs@{V\+G\+\_\+structs}}
\index{V\+G\+\_\+structs@{V\+G\+\_\+structs}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{V\+G\+\_\+structs}{VG_structs}}]{\setlength{\rightskip}{0pt plus 5cm}{\bf S\+\_\+\+List}$<${\bf S\+\_\+\+List}$<$string$>$ $>$$\ast$ V\+G\+\_\+structs = new {\bf S\+\_\+\+List}$<${\bf S\+\_\+\+List}$<$string$>$$>$}\hypertarget{main_8cpp_acb5e2a3948fec132d051d0b3a63950ca}{}\label{main_8cpp_acb5e2a3948fec132d051d0b3a63950ca}
